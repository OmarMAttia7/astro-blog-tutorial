---
import BaseLayout from "../../layouts/BaseLayout.astro";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
  MarkdownInstance,
} from "astro";

export const getStaticPaths = (async () => {
  const allPosts: MarkdownInstance<{
    title: string;
    tags: string[];
  }>[] = await Astro.glob<{
    title: string;
    tags: string[];
  }>("../posts/*.md");
  const tags = Array.from(
    new Set(allPosts.flatMap((post) => post.frontmatter.tags)),
  );

  return tags.map((tag) => ({
    params: {
      tag,
    },
    props: {
      posts: allPosts,
    },
  }));
}) satisfies GetStaticPaths;

const { tag } = Astro.params as InferGetStaticParamsType<typeof getStaticPaths>;
const { posts } = Astro.props as InferGetStaticPropsType<typeof getStaticPaths>;
const filteredPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(tag),
);
---

<BaseLayout activeUrl="/tags" pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts.map((post) => (
        <li>
          <a href={post.url}>{post.frontmatter.title}</a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
